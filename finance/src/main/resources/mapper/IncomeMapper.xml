<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsy.finance.dao.IncomeMapper">
  <resultMap id="BaseResultMap" type="com.zsy.finance.bean.Income">
    <id column="incomeid" jdbcType="INTEGER" property="incomeid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    incomeid, username, date, money, note
  </sql>
  <select id="selectByExample" parameterType="com.zsy.finance.bean.IncomeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from incomeinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from incomeinfo
    where incomeid = #{incomeid,jdbcType=INTEGER}
  </select>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from incomeinfo
    where username = #{username,jdbcType=VARCHAR}
    ORDER BY date DESC
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from incomeinfo
    where incomeid = #{incomeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zsy.finance.bean.IncomeExample">
    delete from incomeinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zsy.finance.bean.Income">
    insert into incomeinfo (incomeid, username, date, 
      money, note)
    values (#{incomeid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, 
      #{money,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zsy.finance.bean.Income">
    insert into incomeinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="incomeid != null">
        incomeid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="incomeid != null">
        #{incomeid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zsy.finance.bean.IncomeExample" resultType="java.lang.Long">
    select count(*) from incomeinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update incomeinfo
    <set>
      <if test="record.incomeid != null">
        incomeid = #{record.incomeid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update incomeinfo
    set incomeid = #{record.incomeid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      money = #{record.money,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zsy.finance.bean.Income">
    update incomeinfo
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where incomeid = #{incomeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zsy.finance.bean.Income">
    update incomeinfo
    set username = #{username,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      money = #{money,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR}
    where incomeid = #{incomeid,jdbcType=INTEGER}
  </update>
</mapper>